eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGQ6CiAgICBpbWFnZTogYXBwbGVib3kvZ29sYW5nLXRlc3RpbmcKICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICAtIEdPUEFUSD0vZ28KICAgIGNvbW1hbmRzOgogICAgICAtIGdsaWRlIGluc3RhbGwKICAgICAgLSBjb3ZlcmFnZSBhbGwKCiAgbm90aWZ5OgogICAgaW1hZ2U6IHNsYWNrCiAgICBjaGFubmVsOiBqZW5raW5zCiAgICB1c2VybmFtZTogZHJvbmUKICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBzdWNjZXNzLCBmYWlsdXJlIF0KICAgIHRlbXBsYXRlOiB8CiAgICAgICp7eyBidWlsZC5zdGF0dXMgfX0qIDx7eyBidWlsZC5saW5rIH19fHt7IHJlcG8ub3duZXIgfX0ve3sgcmVwby5uYW1lIH19I3t7IHRydW5jYXRlIGJ1aWxkLmNvbW1pdCA4IH19PiAoe3sgYnVpbGQuYnJhbmNoIH19KSBieSB7eyBidWlsZC5hdXRob3IgfX0uCiAgICBpbWFnZV91cmw6IGh0dHBzOi8vY2RuMy5pY29uZmluZGVyLmNvbS9kYXRhL2ljb25zL3BpY29ucy1zb2NpYWwvNTcvMTYtYXBwbGUtMTI4LnBuZwoKICBzbGFjazoKICAgIGltYWdlOiBzbGFjawogICAgY2hhbm5lbDogZHJvbmUKICAgIHVzZXJuYW1lOiBkcm9uZQogICAgd2hlbjoKICAgICAgc3RhdHVzOiBbIGtpbGxlZCwgc3VjY2VzcywgZmFpbHVyZSBdCiAgICB0ZW1wbGF0ZTogfAogICAgICAqe3sgYnVpbGQuc3RhdHVzIH19KiA8e3sgYnVpbGQubGluayB9fXx7eyByZXBvLm93bmVyIH19L3t7IHJlcG8ubmFtZSB9fSN7eyB0cnVuY2F0ZSBidWlsZC5jb21taXQgOCB9fT4gKHt7IGJ1aWxkLmJyYW5jaCB9fSkgYnkge3sgYnVpbGQuYXV0aG9yIH19LgogICAgaWNvbl91cmw6IGh0dHBzOi8vY2RuMy5pY29uZmluZGVyLmNvbS9kYXRhL2ljb25zL3BpY29ucy1zb2NpYWwvNTcvMTYtYXBwbGUtMTI4LnBuZwoKd29ya3NwYWNlOgogIHBhdGg6IC9nby9zcmMvZ2l0aHViLmNvbS9hcHBsZWJveS9nby1oZWxsbwo.tQNyfdKB9o3Y_ZXaCZtiGh5NF9IJYbS5PDZMyK_JwGQ